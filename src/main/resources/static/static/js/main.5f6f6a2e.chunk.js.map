{"version":3,"sources":["App.js","components/Edit.js","components/Create.js","components/Show.js","serviceWorker.js","index.js"],"names":["moment","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ideas","_this2","axios","get","then","res","setState","data","console","log","react_default","a","createElement","class","Link","to","aria-hidden","map","i","concat","id","title","description","category","date","format","Component","Edit","onChange","e","idea","target","name","value","onSubmit","preventDefault","_this$state$idea","put","match","params","result","history","push","for","type","placeholder","Create","_this$state","post","_this$state2","Show","_this3","delete","onClick","bind","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f6f6a2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nvar moment = require('moment');\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ideas: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/ideas')\n      .then(res => {\n        this.setState({ ideas: res.data });\n        console.log(this.state.ideas);\n      });\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              IDEAS LIST\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4><Link to=\"/create\"><span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\"></span> Add Idea</Link></h4>\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Category</th>\n                  <th>Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.ideas.map(i =>\n                  <tr>\n                    <td><Link to={`/show/${i.id}`}>{i.title}</Link></td>\n                    <td>{i.description}</td>\n                    <td>{i.category}</td>\n                    <td>{moment(i.date).format(\"MMM Do YY\")}</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Edit extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            idea: {}\n        };\n    }\n\n    componentDidMount() {\n        axios.get('/ideas/' + this.props.match.params.id)\n            .then(res => {\n                this.setState({ idea: res.data });\n                console.log(this.state.idea);\n            });\n    }\n\n    onChange = (e) => {\n        const state = this.state.idea\n        state[e.target.name] = e.target.value;\n        this.setState({ idea: state });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { title, description, category, date } = this.state.idea;\n\n        axios.put('/ideas/' + this.props.match.params.id, { title, description, category, date })\n            .then((result) => {\n                this.props.history.push(\"/show/\" + this.props.match.params.id)\n            });\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">\n                            EDIT IDEA\n                        </h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <h4><Link to={`/show/${this.state.idea.id}`}><span class=\"glyphicon glyphicon-eye-open\" aria-hidden=\"true\"></span> Idea List</Link></h4>\n                        <form onSubmit={this.onSubmit}>\n                            <div class=\"form-group\">\n                                <label for=\"title\">Title:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"title\" value={this.state.idea.title} onChange={this.onChange} placeholder=\"Title\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"description\">Description:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"description\" value={this.state.idea.description} onChange={this.onChange} placeholder=\"Description\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"category\">Category:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"category\" value={this.state.idea.category} onChange={this.onChange} placeholder=\"Category\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"date\">Date:</label>\n                                <input type=\"date\" class=\"form-control\" name=\"date\" value={this.state.idea.date} onChange={this.onChange} placeholder=\"Date\" />\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-default\">Update</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Create extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n            category: '',\n            date: ''\n        };\n    }\n    onChange = (e) => {\n        const state = this.state\n        state[e.target.name] = e.target.value;\n        this.setState(state);\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { title, description, category, date } = this.state;\n\n        axios.post('/ideas', { title, description, category, date })\n            .then((result) => {\n                this.props.history.push(\"/\")\n            });\n    }\n\n    render() {\n        const { title, description, category, date } = this.state;\n        return (\n            <div class=\"container\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">\n                            ADD IDEA\n                        </h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Ideas List</Link></h4>\n                        <form onSubmit={this.onSubmit}>\n                            <div class=\"form-group\">\n                                <label for=\"title\">Title:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"title\" value={title} onChange={this.onChange} placeholder=\"Title\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"description\">Description:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"description\" value={description} onChange={this.onChange} placeholder=\"Description\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"category\">Category:</label>\n                                <input type=\"text\" class=\"form-control\" name=\"category\" value={category} onChange={this.onChange} placeholder=\"Category\" />\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"date\">Date:</label>\n                                <input type=\"Date\" class=\"form-control\" name=\"date\" value={date} onChange={this.onChange} placeholder=\"Date\" />\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Create;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nvar moment = require('moment');\n\nclass Show extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            idea: {}\n        };\n    }\n\n    componentDidMount() {\n        axios.get('/ideas/' + this.props.match.params.id)\n            .then(res => {\n                this.setState({ idea: res.data });\n                console.log(this.state.idea);\n            });\n    }\n\n    delete(id) {\n        console.log(id);\n        axios.delete('/ideas/' + id)\n            .then((result) => {\n                this.props.history.push(\"/\")\n            });\n    }\n\n    render() {\n        return (\n            <div class=\"container\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"panel-title\">\n                            Idea Details\n                        </h3>\n                    </div>\n                    <div class=\"panel-body\">\n                        <h4><Link to=\"/\"><span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\"></span> Ideas List</Link></h4>\n                        <dl>\n                            <dt>Title:</dt>\n                            <dd>{this.state.idea.title}</dd>\n                            <dt>Description:</dt>\n                            <dd>{this.state.idea.description}</dd>\n                            <dt>Category:</dt>\n                            <dd>{this.state.idea.category}</dd>\n                            <dt>Date:</dt>\n                            <dd>{moment(this.state.idea.date).format(\"MMM Do YY\")}</dd>\n                        </dl>\n                        <Link to={`/edit/${this.state.idea.id}`} class=\"btn btn-success\">Edit</Link>&nbsp;\n                        <button onClick={this.delete.bind(this, this.state.idea.id)} class=\"btn btn-danger\">Delete</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Show;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport App from './App';\nimport './index.css';\nimport './App.css';\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <div>\n            <Route exact path='/' component={App} />\n            <Route path='/edit/:id' component={Edit} />\n            <Route path='/create' component={Create} />\n            <Route path='/show/:id' component={Show} />\n        </div>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}